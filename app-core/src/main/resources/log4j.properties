### set log levels ###
log4j.rootLogger=INFO,stdout,E

### 输出到控制台 ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =[%d{yyyy-MM-dd HH:mm:ss} %p %c]  %m%n


# RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
log4j.appender.E = org.apache.log4j.RollingFileAppender
# 指定日志消息的输出最低层次,INFO
log4j.appender.E.Threshold=INFO
# 指定消息输出到D:/log.log文件 ${变量名} 表示读取系统变量
log4j.appender.E.File=${log4jLogPath}
# 后缀可以是KB,MB,GB.在日志文件到达该大小时,将会自动滚动
log4j.appender.E.MaxFileSize=100MB
# MaxBackupIndex 指定可以产生的滚动文件的最大数
log4j.appender.E.MaxBackupIndex=100
#Encoding 可以指定文件编码格式
log4j.appender.E.Encoding=UTF-8
# 日志格式选项 log4j.appender.appenderName.layout =
log4j.appender.E.layout=org.apache.log4j.PatternLayout
# 输出转换模式 %c日志产生的类名 %m日志内容 %d日期格式 %p日志级别
log4j.appender.E.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss} %p %c]  %m%n
